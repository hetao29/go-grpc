// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order/info/info.proto

package order

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	VerifyCode           string   `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ff73efa3237739, []int{0}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type AddResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ff73efa3237739, []int{1}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ListRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ff73efa3237739, []int{2}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ListResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ff73efa3237739, []int{3}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "order.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "order.AddResponse")
	proto.RegisterType((*ListRequest)(nil), "order.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "order.ListResponse")
}

func init() { proto.RegisterFile("order/info/info.proto", fileDescriptor_23ff73efa3237739) }

var fileDescriptor_23ff73efa3237739 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0xc7, 0xd5, 0x2f, 0x3e, 0xae, 0x7c, 0x1e, 0x14, 0x45, 0x11, 0x12, 0xc8, 0x13, 0x53, 0x23,
	0x60, 0x60, 0x61, 0xa9, 0x3a, 0x20, 0x24, 0x16, 0xb2, 0x23, 0x64, 0xf0, 0x25, 0xb2, 0x68, 0x7d,
	0x21, 0x36, 0x45, 0xac, 0xbc, 0x02, 0xbc, 0x19, 0xaf, 0xc0, 0x83, 0xa0, 0xd8, 0x69, 0x1b, 0x16,
	0x06, 0x16, 0xeb, 0xee, 0xef, 0xfb, 0xff, 0x7c, 0xbe, 0x83, 0x01, 0x97, 0x8a, 0xca, 0x44, 0x9b,
	0x8c, 0xfd, 0x31, 0x2c, 0x4a, 0x76, 0x8c, 0x3d, 0x2f, 0xc7, 0x87, 0x39, 0x73, 0x3e, 0xa1, 0x44,
	0x16, 0x3a, 0x91, 0xc6, 0xb0, 0x93, 0x4e, 0xb3, 0xb1, 0xa1, 0x48, 0xdc, 0x01, 0x8c, 0x94, 0x4a,
	0xe9, 0xf9, 0x85, 0xac, 0x43, 0x84, 0xae, 0x91, 0x53, 0x8a, 0x5a, 0xc7, 0xad, 0x93, 0xf5, 0xd4,
	0xc7, 0x18, 0xc3, 0x5a, 0x21, 0xad, 0x7d, 0xe5, 0x52, 0x45, 0x6d, 0xaf, 0x2f, 0x72, 0x3c, 0x82,
	0xfe, 0x8c, 0x4a, 0x9d, 0xbd, 0xdd, 0x3f, 0xb2, 0xa2, 0xa8, 0xe3, 0xaf, 0x21, 0x48, 0x63, 0x56,
	0x24, 0x6e, 0xa1, 0xef, 0xf1, 0xb6, 0x60, 0x63, 0xa9, 0xe2, 0xfb, 0xc2, 0x8a, 0xdf, 0x4b, 0x7d,
	0x8c, 0x11, 0xac, 0x4e, 0xc9, 0x5a, 0x99, 0x53, 0x8d, 0x9f, 0xa7, 0xb8, 0x0f, 0x3d, 0xc7, 0x4f,
	0x64, 0x6a, 0x6e, 0x48, 0xc4, 0x05, 0xf4, 0x6f, 0xb4, 0x75, 0x7f, 0xb5, 0xbc, 0x30, 0xb6, 0x9b,
	0xc6, 0x4b, 0xd8, 0x08, 0xc6, 0xff, 0x34, 0x73, 0xf6, 0xd9, 0x82, 0xee, 0xb5, 0xc9, 0x18, 0xc7,
	0xd0, 0x19, 0x29, 0x85, 0xbb, 0x43, 0x3f, 0xde, 0xe1, 0x72, 0x7a, 0x31, 0x36, 0xa5, 0xf0, 0x88,
	0x18, 0xbc, 0x7f, 0x7d, 0x7f, 0xb4, 0xb7, 0xc5, 0x66, 0x32, 0x3b, 0x4d, 0xc2, 0x9e, 0xa4, 0x52,
	0x78, 0x05, 0xdd, 0xaa, 0x17, 0x9c, 0x5b, 0x1a, 0x3f, 0x8a, 0xf7, 0x7e, 0x69, 0x35, 0xe7, 0xc0,
	0x73, 0x76, 0xc4, 0xd6, 0x92, 0x33, 0xd1, 0xd6, 0x3d, 0xac, 0xf8, 0x35, 0x9e, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x51, 0xc2, 0xee, 0xe0, 0x04, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InfoClient is the client API for Info service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoClient interface {
	// Sends a greeting
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type infoClient struct {
	cc *grpc.ClientConn
}

func NewInfoClient(cc *grpc.ClientConn) InfoClient {
	return &infoClient{cc}
}

func (c *infoClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/order.Info/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/order.Info/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServer is the server API for Info service.
type InfoServer interface {
	// Sends a greeting
	Add(context.Context, *AddRequest) (*AddResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedInfoServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServer struct {
}

func (*UnimplementedInfoServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedInfoServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterInfoServer(s *grpc.Server, srv InfoServer) {
	s.RegisterService(&_Info_serviceDesc, srv)
}

func _Info_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Info/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.Info/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Info_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.Info",
	HandlerType: (*InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Info_Add_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Info_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order/info/info.proto",
}
