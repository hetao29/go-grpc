// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/profile/profile.proto

/*
Package profile is a generated protocol buffer package.

It is generated from these files:
	user/profile/profile.proto

It has these top-level messages:
	Request
	Response
	UpdateRequest
	UpdateResponse
	GetRequest
	GetResponse
*/
package profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode" json:"verify_code,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Request) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type Response struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode" json:"verify_code,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Response) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type UpdateRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	VerifyCode string `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode" json:"verify_code,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type UpdateResponse struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Token   string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetRequest struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetResponse struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "user.profile.Request")
	proto.RegisterType((*Response)(nil), "user.profile.Response")
	proto.RegisterType((*UpdateRequest)(nil), "user.profile.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "user.profile.UpdateResponse")
	proto.RegisterType((*GetRequest)(nil), "user.profile.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "user.profile.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Profile service

type ProfileClient interface {
	// Sends a greeting
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type profileClient struct {
	cc *grpc.ClientConn
}

func NewProfileClient(cc *grpc.ClientConn) ProfileClient {
	return &profileClient{cc}
}

func (c *profileClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/user.profile.Profile/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/user.profile.Profile/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Profile service

type ProfileServer interface {
	// Sends a greeting
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterProfileServer(s *grpc.Server, srv ProfileServer) {
	s.RegisterService(&_Profile_serviceDesc, srv)
}

func _Profile_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.profile.Profile/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.profile.Profile/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Profile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.profile.Profile",
	HandlerType: (*ProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _Profile_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Profile_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/profile/profile.proto",
}

func init() { proto.RegisterFile("user/profile/profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x0d, 0x20, 0x14, 0x06, 0xf5, 0xb0, 0x21, 0x5a, 0x2a, 0x09, 0xa6, 0x27, 0x4f, 0x6d, 0xd4,
	0xc4, 0x8b, 0x37, 0x3d, 0x70, 0x35, 0x8d, 0x26, 0x06, 0x0f, 0xba, 0xda, 0xa1, 0x69, 0x84, 0x9d,
	0xb5, 0xbb, 0x60, 0xbc, 0xfa, 0x0b, 0x7e, 0x95, 0x67, 0x7f, 0xc1, 0x0f, 0x31, 0xec, 0xb6, 0x40,
	0x23, 0xf1, 0x60, 0xf4, 0xd4, 0x7d, 0xf3, 0x66, 0xde, 0x9b, 0x69, 0x1e, 0x78, 0x53, 0x85, 0x59,
	0x28, 0x33, 0x1a, 0xa5, 0x63, 0x2c, 0xbe, 0x81, 0xcc, 0x48, 0x13, 0xdb, 0x9c, 0x73, 0x41, 0x5e,
	0xf3, 0x7a, 0x09, 0x51, 0x32, 0xc6, 0x90, 0xcb, 0x34, 0xe4, 0x42, 0x90, 0xe6, 0x3a, 0x25, 0xa1,
	0x6c, 0xaf, 0x3f, 0x04, 0x27, 0xc2, 0xa7, 0x29, 0x2a, 0xcd, 0x18, 0x6c, 0x08, 0x3e, 0x41, 0xb7,
	0xb2, 0x5f, 0x39, 0x68, 0x45, 0xe6, 0xcd, 0x3c, 0x68, 0x4a, 0xae, 0xd4, 0x33, 0x65, 0xb1, 0x5b,
	0x35, 0xf5, 0x05, 0x66, 0x7d, 0x68, 0xcf, 0x30, 0x4b, 0x47, 0x2f, 0xb7, 0x0f, 0x14, 0xa3, 0x5b,
	0x33, 0x34, 0xd8, 0xd2, 0x39, 0xc5, 0xe8, 0xdf, 0x40, 0x33, 0x42, 0x25, 0x49, 0x28, 0xfc, 0x7b,
	0xf1, 0x3b, 0xd8, 0xba, 0x92, 0x31, 0xd7, 0xf8, 0x6f, 0xeb, 0x5f, 0xc2, 0x76, 0xe1, 0xb0, 0x3c,
	0xc2, 0xf4, 0xce, 0x2d, 0xea, 0x91, 0x79, 0x33, 0x17, 0x9c, 0x09, 0x2a, 0xc5, 0x13, 0xcc, 0x1d,
	0x0a, 0xc8, 0x3a, 0x50, 0xd7, 0xf4, 0x88, 0x22, 0x97, 0xb6, 0xc0, 0x3f, 0x01, 0x18, 0xa0, 0xfe,
	0x69, 0xe9, 0xc5, 0x5c, 0x75, 0x75, 0xee, 0x14, 0xda, 0x66, 0xee, 0x37, 0xab, 0x1c, 0xbd, 0x57,
	0xc0, 0xb9, 0xb0, 0x79, 0x60, 0x31, 0x34, 0xec, 0x59, 0x6c, 0x2f, 0x58, 0x0d, 0x4a, 0x50, 0xfa,
	0x9d, 0x5e, 0x6f, 0x3d, 0x69, 0xed, 0xfd, 0xfe, 0xeb, 0xc7, 0xe7, 0x5b, 0xb5, 0xeb, 0xef, 0x86,
	0xb3, 0xc3, 0xb0, 0x14, 0xc5, 0xa9, 0xd5, 0xbe, 0x86, 0xda, 0x00, 0x35, 0x73, 0xcb, 0x2a, 0xcb,
	0xcb, 0xbd, 0xee, 0x1a, 0x26, 0x17, 0xef, 0x19, 0xf1, 0x1d, 0xd6, 0xf9, 0x26, 0x9e, 0xa0, 0x3e,
	0x6b, 0x0d, 0x9d, 0x1c, 0xde, 0x37, 0x4c, 0x86, 0x8f, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xce,
	0x8e, 0xe8, 0x9c, 0x0d, 0x03, 0x00, 0x00,
}
