// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user/info/info.proto

/*
Package info is a generated protocol buffer package.

It is generated from these files:
	user/info/info.proto

It has these top-level messages:
	LoginRequest
	UserInfo
	LoginResponse
	LogoutRequest
	LogoutResponse
*/
package info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "common"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Error      *common.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Name       string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Password   string        `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	VerifyCode string        `protobuf:"bytes,4,opt,name=verify_code,json=verifyCode" json:"verify_code,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

type UserInfo struct {
	Uid  int64  `protobuf:"varint,1,opt,name=Uid" json:"Uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LoginResponse struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Info  *UserInfo     `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginResponse) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LoginResponse) GetInfo() *UserInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type LogoutRequest struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Name  string        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Token string        `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LogoutRequest) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *LogoutRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogoutRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type LogoutResponse struct {
	Error *common.Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LogoutResponse) GetError() *common.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "user.info.LoginRequest")
	proto.RegisterType((*UserInfo)(nil), "user.info.UserInfo")
	proto.RegisterType((*LoginResponse)(nil), "user.info.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "user.info.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "user.info.LogoutResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Info service

type InfoClient interface {
	// Sends a greeting
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
}

type infoClient struct {
	cc *grpc.ClientConn
}

func NewInfoClient(cc *grpc.ClientConn) InfoClient {
	return &infoClient{cc}
}

func (c *infoClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/user.info.Info/login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *infoClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := grpc.Invoke(ctx, "/user.info.Info/logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Info service

type InfoServer interface {
	// Sends a greeting
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
}

func RegisterInfoServer(s *grpc.Server, srv InfoServer) {
	s.RegisterService(&_Info_serviceDesc, srv)
}

func _Info_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.info.Info/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Info_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.info.Info/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Info_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.info.Info",
	HandlerType: (*InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login",
			Handler:    _Info_Login_Handler,
		},
		{
			MethodName: "logout",
			Handler:    _Info_Logout_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/info/info.proto",
}

func init() { proto.RegisterFile("user/info/info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xc1, 0x4e, 0xea, 0x40,
	0x14, 0x4d, 0xa1, 0x10, 0xb8, 0x3c, 0x78, 0xef, 0x0d, 0x24, 0x96, 0xc6, 0x44, 0x32, 0x2e, 0x24,
	0x2c, 0x5a, 0xc5, 0xb8, 0x61, 0xa9, 0x71, 0x61, 0x62, 0x5c, 0x34, 0x61, 0xa1, 0x89, 0x9a, 0x4a,
	0x07, 0xd2, 0x08, 0x73, 0xeb, 0xcc, 0x14, 0xc3, 0xd6, 0xf8, 0x07, 0xfe, 0x8c, 0xff, 0xe1, 0x2f,
	0xf8, 0x21, 0x66, 0xa6, 0x80, 0x8d, 0xba, 0xd0, 0xb8, 0x69, 0xee, 0x9c, 0xd3, 0x9e, 0x73, 0xe6,
	0xf4, 0x42, 0x2b, 0x95, 0x4c, 0xf8, 0x31, 0x1f, 0xa3, 0x79, 0x78, 0x89, 0x40, 0x85, 0xa4, 0xaa,
	0x51, 0x4f, 0x03, 0xee, 0xff, 0x11, 0xce, 0x66, 0xc8, 0x7d, 0xb5, 0x48, 0x58, 0xc6, 0xba, 0x9b,
	0x13, 0xc4, 0xc9, 0x94, 0xf9, 0x61, 0x12, 0xfb, 0x21, 0xe7, 0xa8, 0x42, 0x15, 0x23, 0x97, 0x19,
	0x4b, 0x1f, 0x2d, 0xf8, 0x73, 0x8a, 0x93, 0x98, 0x07, 0xec, 0x2e, 0x65, 0x52, 0x91, 0x6d, 0x28,
	0x31, 0x21, 0x50, 0x38, 0x56, 0xc7, 0xea, 0xd6, 0xfa, 0x75, 0x2f, 0x53, 0xf4, 0x8e, 0x35, 0x18,
	0x64, 0x1c, 0x21, 0x60, 0xf3, 0x70, 0xc6, 0x9c, 0x42, 0xc7, 0xea, 0x56, 0x03, 0x33, 0x13, 0x17,
	0x2a, 0x49, 0x28, 0xe5, 0x3d, 0x8a, 0xc8, 0x29, 0x1a, 0x7c, 0x7d, 0x26, 0x5b, 0x50, 0x9b, 0x33,
	0x11, 0x8f, 0x17, 0xd7, 0x23, 0x8c, 0x98, 0x63, 0x1b, 0x1a, 0x32, 0xe8, 0x08, 0x23, 0x46, 0x77,
	0xa1, 0x32, 0x94, 0x4c, 0x9c, 0xf0, 0x31, 0x92, 0x7f, 0x50, 0x1c, 0xc6, 0x91, 0xf1, 0x2f, 0x06,
	0x7a, 0xd4, 0x76, 0x67, 0x39, 0x3b, 0x3d, 0xd3, 0x4b, 0xa8, 0x2f, 0x73, 0xcb, 0x04, 0xb9, 0x64,
	0xdf, 0x0b, 0xbe, 0x03, 0xb6, 0xee, 0xc9, 0x28, 0xd5, 0xfa, 0x4d, 0x6f, 0xdd, 0x9c, 0xb7, 0xb2,
	0x0f, 0xcc, 0x0b, 0xf4, 0xca, 0xc8, 0x63, 0xaa, 0x7e, 0xdd, 0x4b, 0x0b, 0x4a, 0x0a, 0x6f, 0x19,
	0x5f, 0x96, 0x92, 0x1d, 0xe8, 0x01, 0x34, 0x56, 0xfa, 0x3f, 0xc8, 0xdf, 0x7f, 0xb6, 0xc0, 0x36,
	0x25, 0x0d, 0xa1, 0x34, 0xd5, 0xd7, 0x27, 0x1b, 0xb9, 0x3b, 0xe4, 0x7f, 0xa4, 0xeb, 0x7c, 0x26,
	0x32, 0x27, 0xda, 0x7e, 0x78, 0x79, 0x7d, 0x2a, 0x34, 0x69, 0xc3, 0x9f, 0xef, 0xf9, 0x66, 0xa3,
	0x8c, 0xd4, 0xc0, 0xea, 0x91, 0x73, 0x28, 0x4f, 0x4d, 0x2c, 0xf2, 0xe1, 0xf3, 0xf7, 0x26, 0xdc,
	0xf6, 0x17, 0xcc, 0x52, 0xd9, 0x35, 0xca, 0x2d, 0xfa, 0x37, 0xaf, 0x8c, 0xa9, 0x1a, 0x58, 0xbd,
	0xc3, 0xf2, 0x85, 0x69, 0xf6, 0xa6, 0x6c, 0x16, 0x6f, 0xff, 0x2d, 0x00, 0x00, 0xff, 0xff, 0x54,
	0x29, 0x5c, 0x94, 0xcc, 0x02, 0x00, 0x00,
}
